OBJS = ast.cmo parser.cmo scanner.cmo melody.cmo

TESTS = \
arith1

TARFILES = Makefile testall.sh scanner.mll parser.mly \
	ast.ml melody.ml \
	$(TESTS:%=tests/test-%.mc) \
	$(TESTS:%=tests/test-%.out)

melody : $(OBJS)
	ocamlc -o melody $(OBJS)

.PHONY : test
test : melody testall.sh
	./testall.sh

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

melody.tar.gz : $(TARFILES)
	cd .. && tar czf PLT_Melody/melody.tar.gz $(TARFILES:%=PLT_Melody/%)

.PHONY : clean
clean :
	rm -f melody parser.ml parser.mli scanner.ml testall.log \
	*.cmo *.cmi *.out *.diff

# Generated by ocamldep *.ml *.mli
ast.cmo: 
ast.cmx: 
melody.cmo: scanner.cmo parser.cmi \
    ast.cmo 
melody.cmx: scanner.cmx parser.cmx \
    ast.cmx 
parser.cmo: ast.cmo parser.cmi 
parser.cmx: ast.cmx parser.cmi 
scanner.cmo: parser.cmi 
scanner.cmx: parser.cmx 
parser.cmi: ast.cmo 
